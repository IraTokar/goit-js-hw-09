{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,aAC9BC,EAAaF,SAASC,cAAc,uBACpCE,EAAYH,SAASC,cAAc,sBACnCG,EAAcJ,SAASC,cAAc,wBAG3C,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAE3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAKPR,EAAKe,iBAAiB,UAEtB,SAAkBC,GAChBA,EAAIC,iBACJ,IAAIC,EAAQC,OAAOhB,EAAWiB,OAC1BC,EAAOF,OAAOf,EAAUgB,OACxBE,EAASH,OAAOd,EAAYe,OAGhCF,GAAgBG,EAEhBrB,EAAKuB,QAEL,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAQE,GAAK,EAI/BlB,EAFWkB,EAAI,EACfN,GAASG,GAELI,MAAK,SAAAC,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MAChBV,EAAA6B,OAAOC,QAAQ,uBAAwCC,OAAftB,EAAS,QAAYsB,OAANrB,EAAM,M,IAE9DsB,OAAM,SAAAJ,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MAClBV,EAAA6B,OAAOC,QAAQ,sBAAqCC,OAAftB,EAAS,QAAYsB,OAANrB,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('form.form');\nconst inputDelay = document.querySelector('input[name=\"delay\"]');\nconst inputStep = document.querySelector('input[name=\"step\"]');\nconst inputAmount = document.querySelector('input[name=\"amount\"]');\n\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    \n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      };\n    }, delay)\n    \n  });  \n};\n\nform.addEventListener('submit', onSubmit);\n\nfunction onSubmit(evt) {\n  evt.preventDefault();\n  let delay = Number(inputDelay.value);\n  let step = Number(inputStep.value);\n  let amount = Number(inputAmount.value);\n\n  let position = 0;\n  delay = delay - step;\n  \n  form.reset();\n  \n  for (let i = 0; i < amount; i += 1 ) {\n\n    position = i + 1;\n    delay += step;\n    createPromise(position, delay)\n       .then(({ position, delay }) => {\n          Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          Notify.success(`❌ Rejected promise ${position} in ${delay}ms`);\n        });\n  }; \n};\n\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$inputDelay","$ce04d3a99e08e73b$var$inputStep","$ce04d3a99e08e73b$var$inputAmount","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","evt","preventDefault","delay1","Number","value","step","amount","reset","i","then","param","Notify","success","concat","catch"],"version":3,"file":"03-promises.d9fa37cf.js.map"}